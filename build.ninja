# file autogenerated by gen-rules; edit config.ninja or that script instead
include config.ninja

rule gen-rules
  command = ./gen-rules
  generator = true

rule cc
  depfile = $out.d
  command = $cc -MMD -MF $out.d $cflags -o $out -c $in
  description = CC $in

rule as
  command = $as $asflags -o $out $in
  description = AS $in

rule install
  command = install $in $out
  description = INSTALL $relpath

rule library
  command = $ar crs $out $in
  description = AR $out

rule link
  command = $ld $ldflags -o $out $in $libs $global_libs
  description = LINK $out

# libc/crt.ninja
build $libdir/crt0.o: as libc/crt0.s
build $libdir/crti.o: as libc/crti.s
build $libdir/crtn.o: as libc/crtn.s
build $libdir/crtbegin.o: as libc/crtbegin.s
build $libdir/crtend.o: as libc/crtend.s
build crt: phony $libdir/crt0.o $libdir/crti.o $libdir/crtn.o $libdir/crtbegin.o $libdir/crtend.o

# libc/libc.a.output
build $libdir/libc.a: library $
    $builddir/libc/_YALCmain.o $
    $builddir/libc/_exit.o $
    $builddir/libc/abort.o $
    $builddir/libc/abs.o $
    $builddir/libc/assert.o $
    $builddir/libc/environ.o $
    $builddir/libc/errno.o $
    $builddir/libc/execve.o $
    $builddir/libc/exit.o $
    $builddir/libc/exits.o $
    $builddir/libc/fchown.o $
    $builddir/libc/fork.o $
    $builddir/libc/fstat.o $
    $builddir/libc/fwstat.o $
    $builddir/libc/getgrnam.o $
    $builddir/libc/isatty.o $
    $builddir/libc/lchown.o $
    $builddir/libc/lock.o $
    $builddir/libc/lstat.o $
    $builddir/libc/malloc.o $
    $builddir/libc/port.o $
    $builddir/libc/read.o $
    $builddir/libc/stat.o $
    $builddir/libc/strtoll.o $
    $builddir/libc/syscall.o $
    $builddir/libc/write.o $
    $builddir/libc/ctype/isspace.o $
    $builddir/libc/ctype/isupper.o $
    $builddir/libc/ctype/tolower.o $
    $builddir/libc/dirent/closedir.o $
    $builddir/libc/dirent/fdopendir.o $
    $builddir/libc/dirent/opendir.o $
    $builddir/libc/dirent/readdir.o $
    $builddir/libc/string/basename.o $
    $builddir/libc/string/itoa.o $
    $builddir/libc/string/memcmp.o $
    $builddir/libc/string/memmove.o $
    $builddir/libc/string/memset.o $
    $builddir/libc/string/strcat.o $
    $builddir/libc/string/strcmp.o $
    $builddir/libc/string/strchr.o $
    $builddir/libc/string/strcpy.o $
    $builddir/libc/string/strdup.o $
    $builddir/libc/string/strlcpy.o $
    $builddir/libc/string/strerror.o $
    $builddir/libc/string/strlen.o $
    $builddir/libc/string/strncmp.o $
    $builddir/libc/string/strndup.o $
    $builddir/libc/string/strrchr.o $
    $builddir/libc/string/strstr.o $
    $builddir/libc/stream/fclose.o $
    $builddir/libc/stream/ferror.o $
    $builddir/libc/stream/fflush.o $
    $builddir/libc/stream/fprintf.o $
    $builddir/libc/stream/fputc.o $
    $builddir/libc/stream/fputs.o $
    $builddir/libc/stream/fread.o $
    $builddir/libc/stream/fwrite.o $
    $builddir/libc/stream/perror.o $
    $builddir/libc/stream/printf.o $
    $builddir/libc/stream/putchar.o $
    $builddir/libc/stream/puts.o $
    $builddir/libc/stream/stream.o $
    $builddir/libc/stream/vfprintf.o $
    $builddir/libc/stream/vprintf.o $
    $builddir/libc/time/localtime.o $
    $builddir/libc/time/time.o $
    
# libc/libk.a.output
build $libdir/libk.a: library $
    $builddir/libc/abs.o $
    $builddir/libc/lock.o $
    $builddir/libc/port.o $
    $builddir/libc/stat.o $
    $builddir/libc/strtoll.o $
    $builddir/libc/ctype/isspace.o $
    $builddir/libc/ctype/isupper.o $
    $builddir/libc/ctype/tolower.o $
    $builddir/libc/string/basename.o $
    $builddir/libc/string/itoa.o $
    $builddir/libc/string/memcmp.o $
    $builddir/libc/string/memmove.o $
    $builddir/libc/string/memset.o $
    $builddir/libc/string/strcat.o $
    $builddir/libc/string/strcmp.o $
    $builddir/libc/string/strchr.o $
    $builddir/libc/string/strcpy.o $
    $builddir/libc/string/strdup.o $
    $builddir/libc/string/strlcpy.o $
    $builddir/libc/string/strerror.o $
    $builddir/libc/string/strlen.o $
    $builddir/libc/string/strncmp.o $
    $builddir/libc/string/strndup.o $
    $builddir/libc/string/strrchr.o $
    $builddir/libc/string/strstr.o $
    
build $builddir/libc/_YALCmain.o: cc libc/_YALCmain.c
build $builddir/libc/_exit.o: cc libc/_exit.c
build $builddir/libc/abort.o: cc libc/abort.c
build $builddir/libc/abs.o: cc libc/abs.c
build $builddir/libc/assert.o: cc libc/assert.c
build $builddir/libc/environ.o: cc libc/environ.c
build $builddir/libc/errno.o: cc libc/errno.c
build $builddir/libc/execve.o: cc libc/execve.c
build $builddir/libc/exit.o: cc libc/exit.c
build $builddir/libc/exits.o: cc libc/exits.c
build $builddir/libc/fchown.o: cc libc/fchown.c
build $builddir/libc/fork.o: cc libc/fork.c
build $builddir/libc/fstat.o: cc libc/fstat.c
build $builddir/libc/fwstat.o: cc libc/fwstat.c
build $builddir/libc/getgrnam.o: cc libc/getgrnam.c
build $builddir/libc/isatty.o: cc libc/isatty.c
build $builddir/libc/lchown.o: cc libc/lchown.c
build $builddir/libc/lstat.o: cc libc/lstat.c
build $builddir/libc/malloc.o: cc libc/malloc.c
build $builddir/libc/read.o: cc libc/read.c
build $builddir/libc/stat.o: cc libc/stat.c
build $builddir/libc/strtoll.o: cc libc/strtoll.c
build $builddir/libc/write.o: cc libc/write.c
build $builddir/libc/crt0.o: as libc/crt0.s
build $builddir/libc/crtbegin.o: as libc/crtbegin.s
build $builddir/libc/crtend.o: as libc/crtend.s
build $builddir/libc/crti.o: as libc/crti.s
build $builddir/libc/crtn.o: as libc/crtn.s
build $builddir/libc/lock.o: as libc/lock.s
build $builddir/libc/port.o: as libc/port.s
build $builddir/libc/syscall.o: as libc/syscall.s

build $builddir/libc/ctype/isspace.o: cc libc/ctype/isspace.c
build $builddir/libc/ctype/isupper.o: cc libc/ctype/isupper.c
build $builddir/libc/ctype/tolower.o: cc libc/ctype/tolower.c

build $builddir/libc/dirent/closedir.o: cc libc/dirent/closedir.c
build $builddir/libc/dirent/fdopendir.o: cc libc/dirent/fdopendir.c
build $builddir/libc/dirent/opendir.o: cc libc/dirent/opendir.c
build $builddir/libc/dirent/readdir.o: cc libc/dirent/readdir.c

# libc/include
build $includedir/libgen.h: install libc/include/libgen.h
  relpath = libgen.h
build $includedir/regex.h: install libc/include/regex.h
  relpath = regex.h
build $includedir/ctype.h: install libc/include/ctype.h
  relpath = ctype.h
build $includedir/dirent.h: install libc/include/dirent.h
  relpath = dirent.h
build $includedir/stdio.h: install libc/include/stdio.h
  relpath = stdio.h
build $includedir/stdlib.h: install libc/include/stdlib.h
  relpath = stdlib.h
build $includedir/string.h: install libc/include/string.h
  relpath = string.h
build $includedir/strings.h: install libc/include/strings.h
  relpath = strings.h
build $includedir/stddef.h: install libc/include/stddef.h
  relpath = stddef.h
build $includedir/time.h: install libc/include/time.h
  relpath = time.h
build $includedir/unistd.h: install libc/include/unistd.h
  relpath = unistd.h
build $includedir/sys/types.h: install libc/include/sys/types.h
  relpath = sys/types.h
build $includedir/sys/wait.h: install libc/include/sys/wait.h
  relpath = sys/wait.h
build $includedir/sys/stat.h: install libc/include/sys/stat.h
  relpath = sys/stat.h
build $includedir/sys/incantations.h: install libc/include/sys/incantations.h
  relpath = sys/incantations.h
build $includedir/sys/ioctl.h: install libc/include/sys/ioctl.h
  relpath = sys/ioctl.h
build $includedir/sys/mman.h: install libc/include/sys/mman.h
  relpath = sys/mman.h
build $includedir/assert.h: install libc/include/assert.h
  relpath = assert.h
build $includedir/_yalc_struct_timespec.h: install libc/include/_yalc_struct_timespec.h
  relpath = _yalc_struct_timespec.h
build $includedir/stdalign.h: install libc/include/stdalign.h
  relpath = stdalign.h
build $includedir/errno.h: install libc/include/errno.h
  relpath = errno.h
build $includedir/utime.h: install libc/include/utime.h
  relpath = utime.h
build $includedir/_yalc.h: install libc/include/_yalc.h
  relpath = _yalc.h
build $includedir/pwd.h: install libc/include/pwd.h
  relpath = pwd.h
build $includedir/setjmp.h: install libc/include/setjmp.h
  relpath = setjmp.h
build $includedir/termios.h: install libc/include/termios.h
  relpath = termios.h
build $includedir/grp.h: install libc/include/grp.h
  relpath = grp.h
build $includedir/fcntl.h: install libc/include/fcntl.h
  relpath = fcntl.h
build $includedir/inttypes.h: install libc/include/inttypes.h
  relpath = inttypes.h
build $includedir/limits.h: install libc/include/limits.h
  relpath = limits.h
build $includedir/signal.h: install libc/include/signal.h
  relpath = signal.h
build $includedir/stdbool.h: install libc/include/stdbool.h
  relpath = stdbool.h
build $includedir/yax/mount.h: install libc/include/yax/mount.h
  relpath = yax/mount.h
build $includedir/yax/func.h: install libc/include/yax/func.h
  relpath = yax/func.h
build $includedir/yax/lock.h: install libc/include/yax/lock.h
  relpath = yax/lock.h
build $includedir/yax/port.h: install libc/include/yax/port.h
  relpath = yax/port.h
build $includedir/pthread.h: install libc/include/pthread.h
  relpath = pthread.h

build $builddir/libc/stream/fclose.o: cc libc/stream/fclose.c
build $builddir/libc/stream/ferror.o: cc libc/stream/ferror.c
build $builddir/libc/stream/fflush.o: cc libc/stream/fflush.c
build $builddir/libc/stream/fprintf.o: cc libc/stream/fprintf.c
build $builddir/libc/stream/fputc.o: cc libc/stream/fputc.c
build $builddir/libc/stream/fputs.o: cc libc/stream/fputs.c
build $builddir/libc/stream/fread.o: cc libc/stream/fread.c
build $builddir/libc/stream/fwrite.o: cc libc/stream/fwrite.c
build $builddir/libc/stream/perror.o: cc libc/stream/perror.c
build $builddir/libc/stream/printf.o: cc libc/stream/printf.c
build $builddir/libc/stream/putchar.o: cc libc/stream/putchar.c
build $builddir/libc/stream/puts.o: cc libc/stream/puts.c
build $builddir/libc/stream/snprintf.o: cc libc/stream/snprintf.c
build $builddir/libc/stream/stream.o: cc libc/stream/stream.c
build $builddir/libc/stream/vfprintf.o: cc libc/stream/vfprintf.c
build $builddir/libc/stream/vprintf.o: cc libc/stream/vprintf.c
build $builddir/libc/stream/vsnprintf.o: cc libc/stream/vsnprintf.c

build $builddir/libc/string/basename.o: cc libc/string/basename.c
build $builddir/libc/string/itoa.o: cc libc/string/itoa.c
build $builddir/libc/string/memcmp.o: cc libc/string/memcmp.c
build $builddir/libc/string/memmove.o: cc libc/string/memmove.c
build $builddir/libc/string/strcat.o: cc libc/string/strcat.c
build $builddir/libc/string/strchr.o: cc libc/string/strchr.c
build $builddir/libc/string/strcmp.o: cc libc/string/strcmp.c
build $builddir/libc/string/strcpy.o: cc libc/string/strcpy.c
build $builddir/libc/string/strdup.o: cc libc/string/strdup.c
build $builddir/libc/string/strerror.o: cc libc/string/strerror.c
build $builddir/libc/string/strlcpy.o: cc libc/string/strlcpy.c
build $builddir/libc/string/strlen.o: cc libc/string/strlen.c
build $builddir/libc/string/strncmp.o: cc libc/string/strncmp.c
build $builddir/libc/string/strndup.o: cc libc/string/strndup.c
build $builddir/libc/string/strrchr.o: cc libc/string/strrchr.c
build $builddir/libc/string/strstr.o: cc libc/string/strstr.c
build $builddir/libc/string/memset.o: as libc/string/memset.s

build $builddir/libc/time/localtime.o: cc libc/time/localtime.c
build $builddir/libc/time/time.o: cc libc/time/time.c

# libcodas/libcodas.a.output
build $libdir/libcodas.a: library $
    $builddir/libcodas/ref.o $
    $builddir/libcodas/vector.o $
    
build $builddir/libcodas/ref.o: cc libcodas/ref.c
build $builddir/libcodas/vector.o: cc libcodas/vector.c

# libcodas/include
build $includedir/codas/generic.h: install libcodas/include/codas/generic.h
  relpath = codas/generic.h
build $includedir/codas/bit.h: install libcodas/include/codas/bit.h
  relpath = codas/bit.h
build $includedir/codas/vector.h: install libcodas/include/codas/vector.h
  relpath = codas/vector.h
build $includedir/codas/ref.h: install libcodas/include/codas/ref.h
  relpath = codas/ref.h
build $includedir/codas/llist.h: install libcodas/include/codas/llist.h
  relpath = codas/llist.h
build $includedir/codas/macro.h: install libcodas/include/codas/macro.h
  relpath = codas/macro.h

# libyaxfs/libyaxfs.a.output
build $libdir/libyaxfs.a: library $
    $builddir/libyaxfs/dofunc.o $
    $builddir/libyaxfs/fid.o $
    $builddir/libyaxfs/file.o $
    $builddir/libyaxfs/serve.o $
    
build $builddir/libyaxfs/dofunc.o: cc libyaxfs/dofunc.c
build $builddir/libyaxfs/fid.o: cc libyaxfs/fid.c
build $builddir/libyaxfs/file.o: cc libyaxfs/file.c
build $builddir/libyaxfs/serve.o: cc libyaxfs/serve.c

# libyaxfs/include
build $includedir/yaxfs/serve.h: install libyaxfs/include/yaxfs/serve.h
  relpath = yaxfs/serve.h
build $includedir/yaxfs/fid.h: install libyaxfs/include/yaxfs/fid.h
  relpath = yaxfs/fid.h
build $includedir/yaxfs/file.h: install libyaxfs/include/yaxfs/file.h
  relpath = yaxfs/file.h
build $includedir/yaxfs/dofunc.h: install libyaxfs/include/yaxfs/dofunc.h
  relpath = yaxfs/dofunc.h
build $includedir/yaxfs/req.h: install libyaxfs/include/yaxfs/req.h
  relpath = yaxfs/req.h

# src/default.ninja
build default: phony $bindir/yax.bin

# src/qemu.ninja
rule qemu
  command = qemu-system-$qemu_arch $qemu_opts
  description = QEMU $in
  pool = console

build qemu: qemu $bindir/yax.bin | $bindir/initrd
  qemu_opts = -serial stdio -kernel $bindir/yax.bin -initrd $bindir/initrd -hda /dev/zero

build qemu-dbg: qemu $bindir/yax.bin | $bindir/initrd
  qemu_opts = -serial stdio -kernel $bindir/yax.bin -initrd $bindir/initrd -hda /dev/zero -s -S

# src/yax.bin.output
build $bindir/yax.bin: link $
    $builddir/src/boot.o $
    $builddir/src/exec.o $
    $builddir/src/int.o $
    $builddir/src/main.o $
    $builddir/src/multitask.o $
    $builddir/src/multitasks.o $
    $builddir/src/pic.o $
    $builddir/src/pit.o $
    $builddir/src/printk.o $
    $builddir/src/ssp.o $
    $builddir/src/syscall.o $
    $builddir/src/sysentry.o $
    $builddir/src/fs/conn.o $
    $builddir/src/fs/fds.o $
    $builddir/src/fs/iofs.o $
    $builddir/src/fs/mnt.o $
    $builddir/src/fs/name.o $
    $builddir/src/fs/pipe.o $
    $builddir/src/fs/printkfs.o $
    $builddir/src/mem/malloc.o $
    $builddir/src/mem/pgdir.o $
    $builddir/src/mem/pgdirs.o $
    $builddir/src/mem/phys.o $
    $builddir/src/mem/str.o $
    $builddir/src/mem/user.o $
    $builddir/src/mem/usrboundary.o $
    $builddir/src/mem/virt.o $
    || $libdir/libk.a $libdir/libcodas.a
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/exec.o: cc src/exec.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/main.o: cc src/main.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/multitask.o: cc src/multitask.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/pic.o: cc src/pic.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/pit.o: cc src/pit.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/printk.o: cc src/printk.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/syscall.o: cc src/syscall.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/boot.o: as src/boot.s
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/int.o: as src/int.s
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/multitasks.o: as src/multitasks.s
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/port.o: as src/port.s
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/ssp.o: as src/ssp.s
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/sysentry.o: as src/sysentry.s
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk


build $builddir/src/fs/conn.o: cc src/fs/conn.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/fs/fds.o: cc src/fs/fds.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/fs/iofs.o: cc src/fs/iofs.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/fs/mnt.o: cc src/fs/mnt.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/fs/name.o: cc src/fs/name.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/fs/pipe.o: cc src/fs/pipe.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/fs/printkfs.o: cc src/fs/printkfs.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk


# src/include
build $includedir/yax/const.h: install src/include/yax/const.h
  relpath = yax/const.h
build $includedir/yax/errorcodes.h: install src/include/yax/errorcodes.h
  relpath = yax/errorcodes.h
build $includedir/yax/fn.h: install src/include/yax/fn.h
  relpath = yax/fn.h
build $includedir/yax/mapflags.h: install src/include/yax/mapflags.h
  relpath = yax/mapflags.h
build $includedir/yax/mountflags.h: install src/include/yax/mountflags.h
  relpath = yax/mountflags.h
build $includedir/yax/nflags.h: install src/include/yax/nflags.h
  relpath = yax/nflags.h
build $includedir/yax/openflags.h: install src/include/yax/openflags.h
  relpath = yax/openflags.h
build $includedir/yax/rfflags.h: install src/include/yax/rfflags.h
  relpath = yax/rfflags.h

build $builddir/src/mem/malloc.o: cc src/mem/malloc.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/mem/pgdir.o: cc src/mem/pgdir.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/mem/phys.o: cc src/mem/phys.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/mem/str.o: cc src/mem/str.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/mem/user.o: cc src/mem/user.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/mem/usrboundary.o: cc src/mem/usrboundary.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/mem/virt.o: cc src/mem/virt.c
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk

build $builddir/src/mem/pgdirs.o: as src/mem/pgdirs.s
  cflags = $cflags -std=c99 -ffreestanding -Wall -Wextra -I src
  ldflags = $ldflags -T src/linker.ld -nostdlib
  libs = -lcodas -lk


# drivers/cons.output
build $bindir/cons: link $
    $builddir/drivers/cons.o $
    || $libdir/libc.a
  ldflags = $ldflags -lyaxfs -lcodas
# drivers/disk.output
build $bindir/disk: link $
    $builddir/drivers/disk.o $
    || $libdir/libc.a
  ldflags = $ldflags -lyaxfs -lcodas
build $builddir/drivers/cons.o: cc drivers/cons.c
  ldflags = $ldflags -lyaxfs -lcodas
build $builddir/drivers/disk.o: cc drivers/disk.c
  ldflags = $ldflags -lyaxfs -lcodas
build $builddir/drivers/pci.o: cc drivers/pci.c
  ldflags = $ldflags -lyaxfs -lcodas

# initrd/packrd.ninja
rule mkinitrd
  command = tar -cvf $out $in

build initrd/initrd: mkinitrd $bindir/cons $bindir/disk

# initrd/initrd.output
build $bindir/initrd: link $
    $builddir/initrd/main.o $
    $builddir/initrd/tarfs.o $
    $builddir/initrd/initramdisk.o $
    
  ldflags = $ldflags -lyaxfs -lcodas
build $builddir/initrd/init.o: cc initrd/init.c
  ldflags = $ldflags -lyaxfs -lcodas
build $builddir/initrd/main.o: cc initrd/main.c
  ldflags = $ldflags -lyaxfs -lcodas
build $builddir/initrd/tarfs.o: cc initrd/tarfs.c
  ldflags = $ldflags -lyaxfs -lcodas
build $builddir/initrd/initramdisk.o: as initrd/initramdisk.s | initrd/initrd
  ldflags = $ldflags -lyaxfs -lcodas

build headers: phony $includedir/libgen.h $includedir/regex.h $includedir/ctype.h $includedir/dirent.h $includedir/stdio.h $includedir/stdlib.h $includedir/string.h $includedir/strings.h $includedir/stddef.h $includedir/time.h $includedir/unistd.h $includedir/sys/types.h $includedir/sys/wait.h $includedir/sys/stat.h $includedir/sys/incantations.h $includedir/sys/ioctl.h $includedir/sys/mman.h $includedir/assert.h $includedir/_yalc_struct_timespec.h $includedir/stdalign.h $includedir/errno.h $includedir/utime.h $includedir/_yalc.h $includedir/pwd.h $includedir/setjmp.h $includedir/termios.h $includedir/grp.h $includedir/fcntl.h $includedir/inttypes.h $includedir/limits.h $includedir/signal.h $includedir/stdbool.h $includedir/yax/mount.h $includedir/yax/func.h $includedir/yax/lock.h $includedir/yax/port.h $includedir/pthread.h $includedir/codas/generic.h $includedir/codas/bit.h $includedir/codas/vector.h $includedir/codas/ref.h $includedir/codas/llist.h $includedir/codas/macro.h $includedir/yaxfs/serve.h $includedir/yaxfs/fid.h $includedir/yaxfs/file.h $includedir/yaxfs/dofunc.h $includedir/yaxfs/req.h $includedir/yax/const.h $includedir/yax/errorcodes.h $includedir/yax/fn.h $includedir/yax/mapflags.h $includedir/yax/mountflags.h $includedir/yax/nflags.h $includedir/yax/openflags.h $includedir/yax/rfflags.h
build tags: ctags libc/crt.ninja libc/libc.a.output libc/libk.a.output libcodas/libcodas.a.output libyaxfs/libyaxfs.a.output src/build.vars src/build.after src/default.ninja src/qemu.ninja src/yax.bin.output src/build.vars src/build.vars drivers/build.vars drivers/build.after drivers/cons.output drivers/disk.output initrd/build.vars initrd/packrd.ninja initrd/initrd.output initrd/initramdisk.s.after
build build.ninja: gen-rules | gen-rules libc/crt.ninja libc/libc.a.output libc/libk.a.output libcodas/libcodas.a.output libyaxfs/libyaxfs.a.output src/build.vars src/build.after src/default.ninja src/qemu.ninja src/yax.bin.output src/build.vars src/build.vars drivers/build.vars drivers/build.after drivers/cons.output drivers/disk.output initrd/build.vars initrd/packrd.ninja initrd/initrd.output initrd/initramdisk.s.after
default default
