On boot:
 - boot:__start
   - set up paging, segmentation
 - main:kernel_main
   - set up kernel subsystems
   - set up first process
 - multitask:usermode
   - jump to initrd (which is an executable)

On syscall:
(SYSV calling convention with syscall instruction in place of call,
ECX as ESP to restore, EDX as return address)
 - sysentry:_sysenter
   - proxy; just calls _syscall
 - sysentry:_syscall
   - copies the arguments to the kernel stack and dispatches call
 - syscall:sys_<call>
   - syscall handlers; verify arguments and call kernel function to do the job

On interrupt:
 - int:int<n>
   - most get ignored
 - or one of:
   - virtmman:page_fault
     - handles segfaults and CoW
   - main:interrupt
     - deals with IRQs
     - just prints debugging info on the screen
     - should be broken up
   - schedule:procswitch
     - the name likely has absolutely nothing to do with the function's function
   - sysentry:_syscall
     - when sysenter is not supported, it is simulated through this

The kernel is roughly divided into 4 parts:
 - Mem
   - physmman, ppg
     - major memory waste (rewrite scheduled)
   - pgdir
     - should use invlpg instead of always reloading cr3
   - virtmman, vpg (depends on physmman and pgdir)
     - mmap, munmap
       - should be optimized (rewrite scheduled)
     - verusrbuf, verusrstr
     - usrmemget, usrmemmap (WIP)
 - Task
   - sysentry
     - usermode
     - _sysentry (depends on mem)
     - _syscall
     - idle
   - schedule
     - procrfork, procexits
     - proclightnew, proclightdel
     - procsleep, procalarm
     - proconnotify, procnoted (noted argument currently ignored)
     - [procnotify] (note pending TODO)
 - VFS
   - name
     - vfsopen
     - vfsgetfid
     - vfsmount
     - vfschdir
       - string ownership issues
   - conn
     - Conn *
     - connnew, conndup
     - connopen, connwalk
     - connread, connwrite, connseek
     - connpread, connpwrite
     - connstat, connwstat
   - iofs (Conn implementation) (TODO)
     - iofsnew
   - irqfs (Conn implementation) (TODO)
     - irqfsnew
   - mnt (Conn implementation) (WIP)
     - mntnew
   - printkfs (Conn implementation)
     - printkfsnew
     - seems to be working, probably has race conditions
   - pipe (Conn implementation)
     - Pipe *
     - pipenew
     - seems to be working, probably has race conditions
 - Misc
   - exec (depends on mem)
     - exec (syscall TODO)
       - ELF format
       - calls the entry point with a stack set up, SYSV calling convention:
         - (NORETURN) _start(char *argv, char *envp)
         - the return address doesn't point to anything interesting
         - argv and envp are single strings; the libc should split them
           according to some convention
   - malloc (dlmalloc, almost 50% of the code; depends on mem)
   - libk
   - ssp
   - int
   - printk
   - pic
   - pit
   - port

TODO (in rough order of priority)
 - console driver
 - get a filesystem working
 - implement exec
 - hd driver
 - get more programs working
 - implement /proc
 - implement note pending
 - fix physmman's memory waste
 - fix concurrency issues
 - make virtmman faster
   - implement CoW
   - use invlpg
 - implement SMP
 - make it fit in a floppy

